/**
 * is G acylic?
 * (assymes not self-loops or parallel edges)
 */
public class Cycle
{
  private boolean[] marked;
  private boolean hasCycle;

  public Cycle(Graph G)
  {
    marked = new boolean[G.V()];
    for (int s = 0; s < G.V(); s++) {
      if (!marked[s]) {
        dfs(G, s, s);
      }
    }
  }

  /**
   * 如果探查到一个节点，发现这个节点已经被探查过，说明图中存在圆
   */
  private void dfs(Graph G, int v, int u) {
    marked[v] = true;
    for (int w: G.adj(v)) {
      if (!marked[w]) {
        dfs(G, w, v);
      } else if (w != u) {
        hasCycle = true;
      }
    }
  }

  public boolean hasCycle()
  {
    return hasCycle;
  }
}